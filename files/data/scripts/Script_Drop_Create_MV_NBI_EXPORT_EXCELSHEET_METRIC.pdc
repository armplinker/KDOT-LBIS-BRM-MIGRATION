DROP MATERIALIZED VIEW  "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC";

CREATE MATERIALIZED VIEW "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC"  
  ON PREBUILT TABLE 
  USING INDEX 
  REFRESH FORCE ON DEMAND 
  AS SELECT B1.Brkey
      ,cast(b1.bridge_GD as VARCHAR2(32)) as bridge_gd
      ,B1.Bridge_Id
      ,B1.Struct_Num
      ,B1.Strucname
      ,I1.Suff_Rate
      ,f_Get_Nbilabel_Fromcolumn('bridge.fips_state', B1.Fips_State) AS Fips_State
      ,B1.Facility
      ,B1.Location
      ,f_Get_Nbilabel_Fromcolumn('roadway.on_under', R1.On_Under) AS On_Under
      ,cast(R1.Roadway_GD as VARCHAR2(32)) as Roadway_GD
      ,f_Get_Nbilabel_Fromcolumn('roadway.kind_hwy', R1.Kind_Hwy) AS Kind_Hwy
      ,f_Get_Nbilabel_Fromcolumn('roadway.levl_srvc', R1.Levl_Srvc) AS Levl_Srvc
      ,R1.Routenum
      ,f_Get_Nbilabel_Fromcolumn('roadway.dirsuffix', R1.Dirsuffix) AS Dirsuffix
      ,B1.Bb_Pct
      ,f_Get_Nbilabel_Fromcolumn('bridge.district', B1.District) AS District
      ,f_Get_Nbilabel_Fromcolumn('bridge.county', B1.County) AS County
      ,f_Get_Nbilabel_Fromcolumn('bridge.placecode', B1.Placecode) AS Placecode
      --,R1.Kmpost AS Milepost
      ,R1.Kmpost * 1.609344 AS Kmpost
      ,B1.Featint
      ,B1.Latitude
      ,B1.Longitude
      ,f_Get_Nbilabel_Fromcolumn('bridge.nstatecode', B1.Nstatecode) AS Nstatecode
      ,B1.Bb_Brdgeid
      ,B1.Appspans
      ,B1.Mainspans
      ,f_Get_Nbilabel_Fromcolumn('bridge.materialmain', B1.Materialmain) AS Materialmain
      ,f_Get_Nbilabel_Fromcolumn('bridge.designmain', B1.Designmain) AS Designmain
      ,f_Get_Nbilabel_Fromcolumn('bridge.materialappr', B1.Materialappr) AS Materialappr
      ,f_Get_Nbilabel_Fromcolumn('bridge.designappr', B1.Designappr) AS Designappr
      ,Nvl(B1.Userkey1, '1001') AS Kdot_Main_Matldesign_Code
      , -- LBIS7, LBIS8 - ARMarshall 05/12/2016 - set this to show 1001 instead of UNK when IS NULL
       f_Get_Kdot_Md_Lbl_Fr_Codes(Nvl(B1.Userkey1, '1001')
                                 ,B1.Materialmain
                                 ,B1.Designmain) AS Kdot_Main_Matdsn_Label
      , -- LBIS7,LBIS8- ARM updated default code value from invalid number UNK to 1001 here 05/18/2016
       Nvl(B1.Userkey2, '1001') AS Kdot_Appr_Matldesign_Code
      , -- LBIS7, LBIS8 - ARMarshall 05/12/2016 - set this to show 1001 instead of UNK when IS NULL
       f_Get_Kdot_Md_Lbl_Fr_Codes(Nvl(B1.Userkey2, '1001')
                                 ,B1.Materialappr
                                 ,B1.Designappr) AS Kdot_Appr_Matdsn_Label
      , -- LBIS7,LBIS8- ARM updated default code value from invalid number UNK to 1001 here 05/18/2016
       f_Get_Nbilabel_Fromcolumn('bridge.dkstructyp', B1.Dkstructyp) AS Dkstructype
      ,f_Get_Nbilabel_Fromcolumn('bridge.dksurftype', B1.Dksurftype) AS Dksurftype
      ,f_Get_Nbilabel_Fromcolumn('bridge.dkmembtype', B1.Dkmembtype) AS Dkmembtype
      ,f_Get_Nbilabel_Fromcolumn('bridge.dkprotect', B1.Dkprotect) AS Dkprotect
      ,B1.Yearbuilt
      ,f_Get_Nbilabel_Fromcolumn('bridge.yearrecon', B1.Yearrecon) AS Yearrecon
      ,f_Get_Nbilabel_Fromcolumn('bridge.servtypon', B1.Servtypon) AS Servtypon
      ,f_Get_Nbilabel_Fromcolumn('bridge.servtypund', B1.Servtypund) AS Servtypund
      ,R1.Lanes
      ,B1.Sumlanes
      ,R1.Bypasslen Bypasslen_Miles
      ,Round(R1.Bypasslen * 1.609344, 2) AS Bypasslen_Km
      ,R1.Adttotal
      ,
       --        r1.truckpct,
       CASE
           WHEN R1.Adttotal < 100 THEN
            NULL
           WHEN R1.Adttotal > 100 THEN
            R1.Truckpct
       END AS Truckpct
      ,R1.Adtyear
      ,CASE
           WHEN B1.Maxspan > 0 THEN
            B1.Maxspan * 0.3048
           ELSE
            B1.Maxspan
       END AS Maxspan_Met
      ,CASE
           WHEN B1.Length > 0 THEN
            B1.Length * 0.3048
           ELSE
            B1.Length
       END AS Length_Met
      ,CASE
           WHEN B1.Lftcurbsw > 0 THEN
            B1.Lftcurbsw * 0.3048
           ELSE
            B1.Lftcurbsw
       END AS Lftcurbsw_Met
      ,CASE
           WHEN B1.Rtcurbsw > 0 THEN
            B1.Rtcurbsw * 0.3048
           ELSE
            B1.Rtcurbsw
       END AS Rtcurbsw_Met
      ,CASE
           WHEN R1.Roadwidth > 0 THEN
            R1.Roadwidth * 0.3048
           ELSE
            R1.Roadwidth
       END AS Roadwidth_Met
      ,CASE
           WHEN B1.Deckwidth > 0 THEN
            B1.Deckwidth * 0.3048
           ELSE
            B1.Deckwidth
       END AS Deckwidth_Met
      ,CASE
           WHEN R1.Aroadwidth > 0 THEN
            R1.Aroadwidth * 0.3048
           ELSE
            R1.Aroadwidth
       END AS Aroadwidth_Met
      ,f_Get_Nbilabel_Fromcolumn('bridge.bridgemed', B1.Bridgemed) AS Bridgemed
      ,CASE
           WHEN B1.Deck_Area > 0 THEN
            B1.Deck_Area * 0.09290304
           ELSE
            B1.Deck_Area
       END AS Deck_Area_Met
      ,B1.Skew
      ,f_Get_Nbilabel_Fromcolumn('bridge.strflared', B1.Strflared) AS Strflared
      ,CASE
           WHEN B1.Vclrover > 0 THEN
            B1.Vclrover * 0.3048
           ELSE
            B1.Vclrover
       END AS Vclrover_Met
      ,f_Get_Nbilabel_Fromcolumn('bridge.refvuc', B1.Refvuc) AS Refvuc
      ,CASE
           WHEN B1.Vclrunder > 0 THEN
            B1.Vclrunder * 0.3048
           ELSE
            B1.Vclrunder
       END AS Vclrunder_Met
      ,f_Get_Nbilabel_Fromcolumn('bridge.refhuc', B1.Refhuc) AS Refhuc
      ,CASE
           WHEN B1.Hclrurt > 0 THEN
            B1.Hclrurt * 0.3048
           ELSE
            B1.Hclrurt
       END AS Hclrurt_Met
      ,CASE
           WHEN B1.Hclrult > 0 THEN
            B1.Hclrult * 0.3048
           ELSE
            B1.Hclrult
       END AS Hclrult_Met
      ,I1.Inspkey
      ,cast(i1.inspevnt_GD as VARCHAR2(32)) as inspevnt_GD
      ,I1.Inspdate
      ,CASE I1.Nbinspdone
           WHEN '1' THEN
            'Y'
           WHEN '0' THEN
            'N'
           ELSE
            I1.Nbinspdone
       END AS Nbinspdone
      ,I1.Brinspfreq
      ,I1.Lastinsp
      ,I1.Nextinsp
      ,
       --         i1.fcinspdone,
       CASE I1.Fcinspdone
           WHEN '1' THEN
            'Y'
           WHEN '0' THEN
            'N'
           WHEN '-' THEN
            NULL
           ELSE
            I1.Fcinspdone
       END AS Fcinspdone
      ,
       --         i1.fcinspfreq,
       CASE I1.Fcinspfreq
           WHEN -1 THEN
            NULL
           WHEN 0 THEN
            NULL
           ELSE
            To_Char(I1.Fcinspfreq)
       END AS Fcinspfreq
      ,
       --         i1.fcinspreq,
       CASE I1.Fcinspreq
           WHEN '1' THEN
            'Y'
           WHEN '0' THEN
            'N'
           WHEN '-1' THEN
            NULL
           ELSE
            I1.Fcinspreq
       END AS Fcinspreq
      ,I1.Fcnextdate
      ,I1.Fclastinsp
      ,
       --        i1.uwinspdone,
       CASE I1.Uwinspdone
           WHEN '1' THEN
            'Y'
           WHEN '0' THEN
            'N'
           WHEN '-' THEN
            NULL
           ELSE
            I1.Uwinspdone
       END AS Uwinspdone
      ,
       --         i1.uwinspreq,
       CASE I1.Uwinspreq
           WHEN '1' THEN
            'Y'
           WHEN '0' THEN
            'N'
           WHEN '-1' THEN
            NULL
           ELSE
            I1.Uwinspreq
       END AS Uwinspreq
      ,
       --         i1.uwinspfreq,
       CASE I1.Uwinspfreq
           WHEN -1 THEN
            NULL
           WHEN 0 THEN
            NULL
           ELSE
            To_Char(I1.Uwinspfreq)
       END AS Uwinspfreq
      ,I1.Uwlastinsp
      ,I1.Uwnextdate
      ,
       --         i1.osinspdone,
       CASE I1.Osinspdone
           WHEN '1' THEN
            'Y'
           WHEN '0' THEN
            'N'
           WHEN '-' THEN
            NULL
           ELSE
            I1.Osinspdone
       END AS Osinspdone
      ,
       --         i1.osinspreq,
       CASE I1.Osinspreq
           WHEN '1' THEN
            'Y'
           WHEN '0' THEN
            'N'
           WHEN '-1' THEN
            NULL
           ELSE
            I1.Osinspreq
       END AS Osinspreq
      ,
       --         i1.osinspfreq,
       CASE I1.Osinspfreq
           WHEN -1 THEN
            NULL
           WHEN 0 THEN
            NULL
           ELSE
            To_Char(I1.Osinspfreq)
       END AS Osinspfreq
      ,I1.Oslastinsp
      ,I1.Osnextdate
      ,
       --         i1.elinspdone,
       CASE I1.Elinspdone
           WHEN '1' THEN
            'Y'
           WHEN '0' THEN
            'N'
           WHEN '-' THEN
            NULL
           ELSE
            I1.Elinspdone
       END AS Elinspdone
      ,
       --         i1.elinspfreq,
       CASE I1.Elinspfreq
           WHEN -1 THEN
            NULL
           WHEN 0 THEN
            NULL
           ELSE
            To_Char(I1.Elinspfreq)
       END AS Elinspfreq
      ,I1.Elinspdate
      ,I1.Elnextdate
      ,f_Get_Nbilabel_Fromcolumn('roadway.defhwy', R1.Defhwy) AS Defhwy
      ,f_Get_Nbilabel_Fromcolumn('bridge.paralstruc', B1.Paralstruc) AS Paralstruc
      ,f_Get_Nbilabel_Fromcolumn('roadway.trafficdir', R1.Trafficdir) AS Trafficdir
      ,f_Get_Nbilabel_Fromcolumn('bridge.tempstruc', B1.Tempstruc) AS Tempstruc
      ,f_Get_Nbilabel_Fromcolumn('roadway.nhs_ind', R1.Nhs_Ind) AS Nhs_Ind
      ,f_Get_Nbilabel_Fromcolumn('bridge.nbislen', B1.Nbislen) AS Nbislen
      ,f_Get_Nbilabel_Fromcolumn('roadway.tollfac', R1.Tollfac) AS Tollfac
      ,f_Get_Nbilabel_Fromcolumn('roadway.funcclass', R1.Funcclass) AS Funclass
      ,f_Get_Nbilabel_Fromcolumn('bridge.histsign', B1.Histsign) AS Histsign
      ,f_Get_Nbilabel_Fromcolumn('bridge.owner', B1.Owner) AS Owner
      ,f_Get_Nbilabel_Fromcolumn('bridge.custodian', B1.Custodian) AS Custodian
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.dkrating', I1.Dkrating) AS Dkrating
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.suprating', I1.Suprating) AS Suprating
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.subrating', I1.Subrating) AS Subrating
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.culvrating', I1.Culvrating) AS Culvrating
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.chanrating', I1.Chanrating) AS Chanrating
      ,f_Get_Nbilabel_Fromcolumn('bridge.irtype', B1.Irtype) AS Irtype
      ,f_Get_Nbilabel_Fromcolumn('bridge.ortype', B1.Ortype) AS Ortype
      ,B1.Irload
      ,B1.Orload
      ,f_Get_Nbilabel_Fromcolumn('bridge.designload', B1.Designload) AS Designload
      ,f_Get_Nbilabel_Fromcolumn('bridge.posting', B1.Posting) AS Posting
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.oppostcl', I1.Oppostcl) AS Oppostcl
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.railrating', I1.Railrating) AS Railrating
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.arailratin', I1.Arailratin) AS Arailrating
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.transratin', I1.Transratin) AS Transratin
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.aendrating', I1.Aendrating) AS Aendrating
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.strrating', I1.Strrating) AS Strrating
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.deckgeom', I1.Deckgeom) AS Deckgeom
      ,I1.Underclr
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.wateradeq', I1.Wateradeq) AS Wateradeq
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.appralign', I1.Appralign) AS Appralign
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.scourcrit', I1.Scourcrit) AS Scourcrit
      ,B1.Nbiimpcost
      ,f_Get_Nbilabel_Fromcolumn('bridge.propwork', B1.Propwork) AS Propwork
      ,
       --         b1.nbirwcost,
       CASE
           WHEN B1.Nbirwcost <= 0 THEN
            NULL
           WHEN B1.Nbirwcost > 0 THEN
            B1.Nbirwcost
           ELSE
            NULL
       END AS Nbirwcost
      ,CASE
           WHEN B1.Implen > 0 THEN
            B1.Implen * 0.3048
           ELSE
            B1.Implen
       END AS Implen_Met
      ,
       --         b1.nbitotcost,
       CASE
           WHEN B1.Nbitotcost <= 0 THEN
            NULL
           WHEN B1.Nbitotcost > 0 THEN
            B1.Nbitotcost
       END AS Nbitotcost
      ,R1.Adtfuture
      ,
       --         b1.nbiyrcost,
       CASE
           WHEN B1.Nbiyrcost <= 0 THEN
            NULL
           WHEN B1.Nbiyrcost > 0 THEN
            B1.Nbiyrcost
       END AS Nbiyrcost
      ,R1.Adtfutyear
      ,f_Get_Nbilabel_Fromcolumn('bridge.navcntrol', B1.Navcntrol) AS Navcntrol
      ,CASE
           WHEN B1.Navvc > 0 THEN
            B1.Navvc * 0.3048
           ELSE
            B1.Navvc
       END AS Navvc_Met
      ,CASE
           WHEN B1.Navhc > 0 THEN
            B1.Navhc * 0.3048
           ELSE
            B1.Navhc
       END AS Navhc_Met
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.pierprot', I1.Pierprot) AS Pierprot
      ,CASE
           WHEN B1.Lftbrnavcl > 0 THEN
            B1.Lftbrnavcl * 0.3048
           ELSE
            B1.Lftbrnavcl
       END AS Lftbrnavcl_Met
      ,f_Get_Nbilabel_Fromcolumn('inspevnt.nbi_rating', I1.Nbi_Rating) AS Nbi_Rating
      ,B1.Notes AS Bridge_Notes
      ,R1.Notes AS Roadway_Notes
      ,I1.Notes AS Inspevnt_Notes                
FROM Bridge B1
INNER JOIN Roadway R1
ON b1.bridge_GD = r1.bridge_GD
INNER JOIN Mv_Latest_Inspection Mv
ON b1.bridge_GD = mv.bridge_GD
INNER JOIN Inspevnt I1
ON mv.Inspevnt_GD = i1.inspevnt_GD
WHERE /* (((R1.Bridge_Gd = B1.Bridge_Gd) AND (I1.Bridge_Gd = B1.Bridge_Gd) AND
       (I1.Inspevnt_Gd =
       (SELECT Mv.Inspevnt_Gd
             FROM Mv_Latest_Inspection Mv
            WHERE Mv.Bridge_Gd = B1.Bridge_Gd)) AND*/
 R1.On_Under =
 (SELECT MIN(R2.On_Under) FROM Roadway R2 WHERE R2.Bridge_GD = B1.Bridge_GD);

  GRANT UPDATE ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BRMADMIN_ROLE";
  GRANT INSERT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BRMADMIN_ROLE";
  GRANT DELETE ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BRMADMIN_ROLE";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BRMADMIN_ROLE";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BLP_TEAM_LEADER";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BLP_INSPECTOR";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BLP_LOAD_RATER";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BLP_BROWSER";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "KDOT_BLP_ISU";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BLP_PORTAL_ADMINISTRATOR";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "KDOT_BLP_SELECT";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BLP_LOCAL_AGENCY_REVIEW";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "PONTISWEBINSPECTOR";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "PONTISWEBINSPECTIONSUPERVISOR";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "PONTISWEBBROWSER";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "PONTISWEBADMINISTRATOR";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "PONTISUSER";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "PWEBODBCLOGIN";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "PWEBLOGINID";
  GRANT SELECT ON "KDOT_BLP"."MV_NBI_EXPORT_EXCELSHEET_METRIC" TO "BRMREADONLY_ROLE";
