DROP MATERIALIZED VIEW MV_PORTAL_DATA_DICTIONARY_CACHE;

DROP TABLE MV_PORTAL_DATA_DICTIONARY_CACHE PURGE;

CREATE TABLE MV_PORTAL_DATA_DICTIONARY_CACHE AS
WITH Cte AS
 (SELECT DISTINCT Upper(Kad.Table_Name) AS Table_Name
    FROM Kdotblp_Attribute_Descriptor Kad
   INNER JOIN Kdotblp_Form_Tabs Kft
      ON Kad.Tab_Group = Kft.Tab_Id
   WHERE Kad.Tab_Group <> 99
     AND f_Is_Yes(Kft.Tab_Isactive) = 1
   GROUP BY UPPER(Kad.Table_Name))
SELECT CASE
         WHEN f_Is_Primarykey_Col(Cte.Table_Name, Utc.Column_Name, USER) = 1 THEN
          'K' /*||
                                                                                     -- Substr(REPLACE(Lower(Utc.Table_Name), 'kdotblp_', ''), 1, 1) ||
                                                                                      TRIM(To_Char(Floor(Dbms_Random.Value(1, 9999999)), '0000000')))*/
         ELSE
          'R' /*||
                                                                                      --Substr(REPLACE(Lower(Utc.Table_Name), 'kdotblp_', ''), 1, 1) ||
                                                                                      */
       END ||
       TRIM(To_Char(Floor(Dbms_Random.Value(1, 9999999)), '0000000')) AS Nbi_Id,
       q'[SYNTHCOLUMN]' AS Nbi_Level,
       Lower(Utc.Table_Name) AS Table_Name,
       Lower(Utc.Column_Name) AS Col_Name,
       q'[AUTO-GENERATED: ]' ||
       Lower(Utc.Table_Name || '.' || Utc.Column_Name || '.' ||
             Utc.Column_Id) AS Description,
       CAST(88 as NUMBER(8, 0)) AS Tab_Group,
       CAST(NULL AS CHAR) AS Tab_Isactive,
       '0' AS Data_Edit_Flag,
       '1' Full_Row_Flag,
       CAST(ROWNUM + 700 as NUMBER(8, 0)) AS Detail_Ord_Num,
       --,CAST(Dbms_Random.Value(99, 999) as NUMBER(8,0)) AS Detail_Ord_Num
       'TB' AS Control_Type,
       cast(0 as NUMBER(8, 0)) AS Num_Dec,
       cast(0 as NUMBER(8, 0)) AS Textlines,
       '1' AS Valid_Required,
       NULL AS Valid_Range,
       NULL AS Valid_Range_Err_Msg,
       NULL AS Valid_List,
       NULL AS Valid_List_Err_Msg,
       NULL AS Valid_Regular_Exp,
       NULL AS Valid_Regular_Exp_Err_Msg,
       NULL AS Valid_Cross_Check,
       NULL AS Valid_Cross_Check_Err_Msg,
       NULL AS Sql_Param_1,
       NULL AS Sql_Param_2,
       NULL AS Sql_Query,
       cast(CASE
              WHEN Utc.Data_Type = 'DATE' THEN
               10
              ELSE
               CASE
                 WHEN Dd.Width IS NULL THEN
                  CASE
                    WHEN Utc.Data_Scale IS NULL THEN
                     CAST(Utc.Data_Length as NUMBER(8, 0))
                    ELSE
                     Dd.Width
                  END
                 ELSE
                  Dd.Width
               END
            END as NUMBER(8, 0)) AS Maxlength,
       CAST(NULL as NUMBER(8, 0)) AS Pos,
       CAST(CASE
              WHEN Utc.Data_Type = 'DATE' THEN
               10
              ELSE
               CASE
                 WHEN Dd.Width IS NULL THEN
                  CASE
                    WHEN Utc.Data_Scale IS NULL THEN
                     CAST(Utc.Data_Length as NUMBER(8, 0))
                    ELSE
                     Dd.Width
                  END
                 ELSE
                  Dd.Width
               END
            END as NUMBER(8, 0)) AS Length,
       'AN' AS Antype,
       '$' AS Import_Treatment,
       '$' AS Export_Treatment,
       '$' AS Missing_Treatment,
       NULL AS Ceiling,
       'varchar' AS Datatype,
       cast(-1 as NUMBER(8, 0)) AS Paircode,
       '_' AS Sysdefault,
       '-1' AS Metricunit,
       '-1' AS Englishunit,
       1.0 AS Factor,
       Utc.Table_Name || ' primary key or required field' AS Notes,
       NULL AS Ddl_Index_Changed,
       NULL AS Data_Edit_Flag_Insp,
       NULL AS Cb_Checked_Changed,
       NULL AS Valid_Compare_Exp,
       NULL AS Valid_Compare_Err_Msg,
       NULL AS Mask,
       NULL AS Display_Mask,
       NULL AS Ss_Name,
       CASE
         WHEN f_Is_Primarykey_Col(Cte.Table_Name, Utc.Column_Name, USER) = 1 THEN
          '1'
         ELSE
          '0'
       END AS Ispk,
       CASE
         WHEN Dd.Col_Name IS NULL THEN
          '0'
         ELSE
          '1'
       END AS In_BrM_Dd,
       Dd.Datatype AS BrM_Dd_Data_Type,
       CAST(Dd.Width as NUMBER(8, 0)) AS BrM_Dd_Width,
       CAST(Dd.Dec_Plcs as NUMBER(8, 0)) AS BrM_Dd_Dec_Plcs,
       Utc.Data_Type AS Db_Data_Type,
       CAST(Utc.Data_Length as NUMBER(8, 0)) AS Db_Data_Length,
       CAST(Utc.Data_Scale as NUMBER(8, 0)) AS Db_Data_Scale,
       CAST(Utc.Data_Precision as NUMBER(8, 0)) AS Db_Data_Precision,
       CAST(Utc.Column_Id as NUMBER(8, 0)) AS Db_Column_Id,
       'UTC' AS Dd_Item_Source
/*
      db_data_type = r.field<string>("db_data_type");
      db_data_length = r.Field<byte>("db_data_length");
      db_data_scale = r.Field<byte>("db_data_scale");
      db_data_precision = r.Field<byte>("db_data_precision");
*/
  FROM User_Tab_Cols Utc
 INNER JOIN Cte
    ON Cte.Table_Name = Utc.Table_Name
  LEFT OUTER JOIN Datadict Dd
    ON Upper(Dd.Table_Name) = Utc.Table_Name
   AND Upper(Dd.Col_Name) = Utc.Column_Name
   AND Lower(Dd.Table_Name) IN
       (SELECT DISTINCT Kad3.Table_Name
          FROM Kdotblp_Attribute_Descriptor Kad3
         GROUP BY Kad3.Table_Name)
 WHERE (Utc.Data_Type <> 'RAW' AND Upper(Utc.Column_Name) NOT LIKE 'SYS%')
   AND (f_Is_Primarykey_Col(Cte.Table_Name, Utc.Column_Name, USER) = 1 OR
       Lower(Utc.Column_Name) NOT IN
       (SELECT DISTINCT Kad2.Col_Name
           FROM Kdotblp_Attribute_Descriptor Kad2
          WHERE Lower(Utc.Table_Name) = Kad2.Table_Name))
UNION
SELECT Kad.Nbi_Id,
       Kad.Nbi_Level,
       Kad.Table_Name,
       Kad.Col_Name,
       Kad.Description,
       CAST(Kad.Tab_Group as NUMBER(8, 0)) AS "TAB_GROUP",
       CAST(Nvl(Kft.Tab_Isactive, 0) AS CHAR) AS "TAB_ISACTIVE",
       Kad.Data_Edit_Flag,
       Kad.Full_Row_Flag,
       CAST(Nvl(Kad.Detail_Ord_Num, -1) as NUMBER(8, 0)) AS "DETAIL_ORD_NUM",
       Kad.Control_Type,
       CAST(CASE
              WHEN Is_Integer(Kad.Num_Dec) = 0 THEN
               0
              ELSE
               To_Number(Nvl(Kad.Num_Dec, '0'))
            END as NUMBER(8, 0)) AS Num_Dec,
       CAST(CASE
              WHEN Upper(Control_Type) = 'TN' THEN
               To_Number(Nvl(Kad.Num_Dec, '-1'))
              ELSE
               CASE
                 WHEN Is_Integer(Kad.Num_Dec) = 0 THEN
                  0
                 ELSE
                  To_Number(Nvl(Kad.Num_Dec, '0'))
               END
            END as NUMBER(8, 0)) AS Textlines,
       Kad.Valid_Required,
       Kad.Valid_Range,
       Kad.Valid_Range_Err_Msg,
       Kad.Valid_List,
       Kad.Valid_List_Err_Msg,
       Kad.Valid_Regular_Exp,
       Kad.Valid_Regular_Exp_Err_Msg,
       Kad.Valid_Cross_Check,
       Kad.Valid_Cross_Check_Err_Msg,
       Kad.Sql_Param_1,
       Kad.Sql_Param_2,
       Kad.Sql_Query,
       CAST(Kad.Maxlength as NUMBER(8, 0)) AS "MAXLENGTH",
       -- ,Case When Kad.Pos Is null Or kad.pos <=0 Then Utc.Column_Id Else  Kad.Pos End  AS Pos
       CAST(Kad.Pos as NUMBER(8, 0)) AS pos,
       CAST(Kad.Length as NUMBER(8, 0)) AS "LENGTH",
       Kad.Antype,
       Kad.Import_Treatment,
       Kad.Export_Treatment,
       Kad.Missing_Treatment,
       Kad.Ceiling,
       Kad.Datatype,
       CAST(Kad.Paircode as NUMBER(8, 0)) AS "PAIRCODE",
       Kad.Sysdefault,
       Kad.Metricunit,
       Kad.Englishunit,
       To_Number(f_Safe_Decimal(Kad.Factor, 4)) AS "FACTOR",
       Kad.Notes,
       Kad.Ddl_Index_Changed,
       Kad.Data_Edit_Flag_Insp,
       Kad.Cb_Checked_Changed,
       Kad.Valid_Compare_Exp,
       Kad.Valid_Compare_Err_Msg,
       Kad.Mask,
       Kad.Display_Mask,
       Kad.Ss_Name,
       CASE
         WHEN f_Is_Primarykey_Col(Kad.Table_Name, Kad.Col_Name, USER) = 1 THEN
          '1'
         ELSE
          '0'
       END AS Ispk,
       CASE
         WHEN Dd.Col_Name IS NULL THEN
          '0'
         ELSE
          '1'
       END AS In_BrM_Dd,
       Dd.Datatype AS BrM_Ddd_Data_Type,
       CAST(Dd.Width as NUMBER(8, 0)) AS BrM_Dd_Width,
       CAST(Dd.Dec_Plcs as NUMBER(8, 0)) AS BrM_Dd_Dec_Plcs,
       Utc.Data_Type AS Db_Data_Type,
       CAST(Utc.Data_Length as NUMBER(8, 0)) AS Db_Data_Length,
       CAST(Utc.Data_Scale as NUMBER(8, 0)) AS Db_Data_Scale,
       CAST(Utc.Data_Precision as NUMBER(8, 0)) AS Db_Data_Precision,
       CAST(Utc.Column_Id as NUMBER(8, 0)) AS Db_Column_Id,
       'KAD' AS Dd_Item_Source
  FROM Kdotblp_Form_Tabs Kft
 INNER JOIN Kdotblp_Attribute_Descriptor Kad
    ON Kft.Tab_Id = Kad.Tab_Group
 INNER JOIN User_Tab_Cols Utc
    ON Upper(Kad.Table_Name) = Utc.Table_Name AND
 Upper(Kad.Col_Name) = Utc.Column_Name
  LEFT OUTER JOIN Datadict Dd
    ON Lower(Dd.Table_Name) = Lower(Kad.Table_Name) AND
 Lower(Dd.Col_Name) = Lower(Kad.Col_Name) AND
 Lower(Dd.Table_Name) IN
 (SELECT DISTINCT Kad4.Table_Name
    FROM Kdotblp_Attribute_Descriptor Kad4
   GROUP BY Kad4.Table_Name)
 WHERE f_Is_Yes(Kft.Tab_Isactive) = 1 
 ORDER BY 1;


-- Create/Recreate indexes 
create index NRM_MV_PORTAL_DD_NBI_ID on MV_PORTAL_DATA_DICTIONARY_CACHE(NBI_ID) tablespace KDOT_BLP pctfree 10 initrans 2 maxtrans 255 storage(initial 64K next 1M
                                                                                                                                               minextents 1
                                                                                                                                               maxextents
                                                                                                                                               unlimited);
create unique index UNQ_MV_PORTAL_DD_CACHE on MV_PORTAL_DATA_DICTIONARY_CACHE(TAB_GROUP,
                                                                              NBI_ID) tablespace KDOT_BLP pctfree 10 initrans 2 maxtrans 255 storage(initial 64K next 1M
                                                                                                                                                     minextents 1
                                                                                                                                                     maxextents
                                                                                                                                                     unlimited);
create unique index UNQ_MV_PORTAL_DD_CACHE_TAB_COL on MV_PORTAL_DATA_DICTIONARY_CACHE(TABLE_NAME,
                                                                                      COL_NAME,
                                                                                      TAB_GROUP) tablespace KDOT_BLP pctfree 10 initrans 2 maxtrans 255 storage(initial 64K next 1M
                                                                                                                                                                minextents 1
                                                                                                                                                                maxextents
                                                                                                                                                                unlimited);
create unique index UNQ_TAB_TABLE_COLUMN_DETAIL_ORD_NUM on MV_PORTAL_DATA_DICTIONARY_CACHE(TAB_GROUP,
                                                                                           DETAIL_ORD_NUM) tablespace KDOT_BLP pctfree 10 initrans 2 maxtrans 255 storage(initial 64K next 1M
                                                                                                                                                                          minextents 1
                                                                                                                                                                          maxextents
                                                                                                                                                                          unlimited);
TRUNCATE TABLE MV_PORTAL_DATA_DICTIONARY_CACHE;
                                                                                                                                                                        
                                                                                                                                                                          
